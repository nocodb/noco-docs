"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[8767],{55081:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var s=t(74848),i=t(28453);const o={title:"Nix/NixOS",description:"Install NocoDB on NixOS.",tags:["Open Source","Nix","NixOS"],keywords:["NocoDB installation","NocoDB one command installation","NocoDB prerequisites"]},r="On NixOS",l={id:"getting-started/self-hosted/installation/nix",title:"Nix/NixOS",description:"Install NocoDB on NixOS.",source:"@site/docs/020.getting-started/050.self-hosted/010.installation/100.nix.md",sourceDirName:"020.getting-started/050.self-hosted/010.installation",slug:"/getting-started/self-hosted/installation/nix",permalink:"/getting-started/self-hosted/installation/nix",draft:!1,unlisted:!1,editUrl:"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/docs/020.getting-started/050.self-hosted/010.installation/100.nix.md",tags:[{label:"Open Source",permalink:"/tags/open-source"},{label:"Nix",permalink:"/tags/nix"},{label:"NixOS",permalink:"/tags/nix-os"}],version:"current",sidebarPosition:100,frontMatter:{title:"Nix/NixOS",description:"Install NocoDB on NixOS.",tags:["Open Source","Nix","NixOS"],keywords:["NocoDB installation","NocoDB one command installation","NocoDB prerequisites"]},sidebar:"tutorialSidebar",previous:{title:"DigitalOcean",permalink:"/getting-started/self-hosted/installation/digital-ocean"},next:{title:"Other Installation Methods",permalink:"/getting-started/self-hosted/installation/other-installations"}},c={},a=[{value:"Basic Setup",id:"basic-setup",level:2},{value:"Secrets",id:"secrets",level:2},{value:"SSL",id:"ssl",level:2},{value:"PostgreSQL",id:"postgresql",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"on-nixos",children:"On NixOS"}),"\n",(0,s.jsx)(e.h2,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,s.jsx)(e.p,{children:"The NixOS module is the recommended method for installing and configuring NocoDB on NixOS. We advise using Flakes for this process. The NixOS module will install NocoDB and create a corresponding systemd service"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'{\n  description = "Bane\'s NixOS configuration";\n\n  inputs = {\n    nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";\n    nocodb.url = "github:nocodb/nocodb";\n  };\n\n  outputs = inputs@{ nixpkgs, nocodb, ... }: {\n    nixosConfigurations = {\n      hostname = nixpkgs.lib.nixosSystem {\n        system = "x86_64-linux";\n        modules = [\n          ./configuration.nix\n          nocodb.nixosModules.nocodb\n\n          {\n            # Enable NocoDB\n            services.nocodb.enable = true;\n          }\n        ];\n      };\n    };\n  };\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"secrets",children:"Secrets"}),"\n",(0,s.jsxs)(e.p,{children:["We recommend using the ",(0,s.jsx)(e.code,{children:"services.nocodb.environmentFile"})," option to securely pass secrets, such as ",(0,s.jsx)(e.code,{children:"NC_AUTH_JWT_SECRET"}),", to the NixOS NocoDB instance. This approach prevents sensitive information from being committed to the NixOS repository. While it is not required, we strongly suggest using ",(0,s.jsx)(e.a,{href:"https://github.com/Mic92/sops-nix",children:"sops-nix"})," for managing secrets in a more secure and structured manner."]}),"\n",(0,s.jsx)(e.p,{children:"Example configuration:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'services.nocodb.environmentFile = "/var/lib/secrets/nocodb.env"\n'})}),"\n",(0,s.jsx)(e.h2,{id:"ssl",children:"SSL"}),"\n",(0,s.jsx)(e.p,{children:"It is recommended to use the NixOS Nginx module with ACME for SSL certificate management. This approach ensures secure and automated handling of SSL certificates."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'networking.firewall.allowedTCPPorts = [ 80 443 ];\n\nservices.nginx = {\n    enable = true;\n\n    recommendedTlsSettings = true;\n    recommendedOptimisation = true;\n    recommendedGzipSettings = true;\n    recommendedProxySettings = true;\n    recommendedBrotliSettings = true;\n\n    virtualHosts."example.com" =  {\n      enableACME = true;\n      forceSSL = true;\n      locations."/" = {\n        proxyPass = "http://127.0.0.1:8080";\n        proxyWebsockets = true;\n      };\n    };\n};\n'})}),"\n",(0,s.jsx)(e.h2,{id:"postgresql",children:"PostgreSQL"}),"\n",(0,s.jsx)(e.p,{children:"For production use recommend PostgreSQL instead of SQLite"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'  services.nocodb.environments = {\n    DB_URL="postgres:///nocodb?host=/run/postgresql";\n  };\n\n  services.postgresql = {\n    enable = true;\n\n    ensureDatabases = [ "nocodb" ];\n    ensureUsers = [{\n      name = "nocodb";\n      ensureDBOwnership = true;\n    }];\n\n    package = with pkgs; postgresql_15;\n    authentication = lib.mkForce \'\'\n        #type database DBuser  origin-address auth-method\n        # unix socket\n        local all      all                    trust\n        # ipv4\n        host  all      all     127.0.0.1/32   trust\n        # ipv6\n        host  all      all     ::1/128        trust\n    \'\';\n\n    settings.log_timezone = config.time.timeZone;\n  };\n'})}),"\n",(0,s.jsx)(e.h1,{id:"on-other-gnulinux-distributions-and-macos",children:"On Other GNU/Linux Distributions and MacOS"}),"\n",(0,s.jsx)(e.p,{children:"If Nix is not already installed on your system, we recommend using the Determinate Systems Nix installer to install Nix. If Nix is already installed, you can skip this step."}),"\n",(0,s.jsx)(e.p,{children:"To install Nix, run the following command:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install\n"})}),"\n",(0,s.jsx)(e.p,{children:"Once Nix is installed, you can run NocoDB using the following command:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"nix run github:nocodb/nocodb\n"})})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>l});var s=t(96540);const i={},o=s.createContext(i);function r(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);